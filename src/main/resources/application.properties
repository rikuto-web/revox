# =========================================
# Core Spring Boot Application Properties
# =========================================
spring.application.name=revox

# =========================================
# Web Server (Tomcat)
# =========================================
server.port=8080

# =========================================
# Database Settings (JPA / Hibernate / MySQL)
# =========================================


# MySQL Database (?????????)
spring.datasource.url=jdbc:mysql://localhost:3308/${MYSQL_DATABASE}?useSSL=false&serverTimezone=Asia/Tokyo&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf8
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# =========================================
# JPA / Hibernate Settings
# =========================================
# JPAにおけるHibernate設定
spring.jpa.database=MYSQL

# DDL (データ定義言語) 自動生成設定
# create-drop: アプリケーション起動時にDBスキーマを再作成し、終了時に削除 (開発/テスト用)
# update: スキーマを既存DBに合わせて更新 (本番環境では注意; 開発/テスト用)
# validate: スキーマがDBと一致するか検証 (不一致ならエラーをスロー)
# none: DDL自動生成を行わない (Flywayなどのマイグレーションツール使用時)
spring.jpa.hibernate.ddl-auto=update

# 実行されるSQLを表示する
spring.jpa.show-sql=true
# 実行されるSQLを整形して表示
spring.jpa.properties.hibernate.format_sql=true

# =========================================
# Flyway Database Migration
# =========================================
# Flyway を有効にするか (デフォルトはtrue)
spring.flyway.enabled=true
# マイグレーションファイルの場所 (デフォルトはclasspath:db/migration)
spring.flyway.locations=classpath:db/migration

# =========================================
# Spring Security
# =========================================
# Spring Securityのログレベルを設定 (詳細表示)
logging.level.org.springframework.security=DEBUG

# 組み込み認証ユーザーの設定 (開発環境での利用を想定)
spring.security.user.name=${SECURITY_USER_NAME}
spring.security.user.password=${SECURITY_USER_PASSWORD}

# =========================================
# Logging (Optional)
# =========================================
# デフォルトのログレベル (DEBUG, INFO, WARN, ERROR, TRACE)
logging.level.root=INFO
# Hibernateが実行するSQLログを詳細表示 (SQLのデバッグ用)
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# =========================================
# DevTools (Optional: Development Profile only)
# =========================================
# DevToolsの自動再起動を有効にするか
# spring.devtools.restart.enabled=false
# DevToolsリモートデバッグのシークレットキー
# spring.devtools.remote.secret=mysecret